[ { "title": "Meraki to MindMaps", "url": "/posts/Meraki_to_Mindmaps/", "categories": "Devnet Associate, Automation, Meraki", "tags": "meraki, python, mindmaps, svg, devnet", "date": "2022-09-13 12:00:00 -0500", "snippet": "Meraki-To-MindMapsScript ResultInstallation for debian-based OSVirtual EnvironmentWe recommend running Mind nMap in a Python virtual environment while testing or developing. This will help keep your host system clean and allow you to have multiple environments to try new things. If you are not using a virtual environment, start at the download/clone step below.You will also need Python 3, pip, and venv installed on your host system.In your project directory, create your virtual environmentpython3 -m venv myvenvActivate (use) your new virtual environment (Linux):source myvenv/bin/activateDownload or clone the mind_nmap repository:git clone https://github.com/AngelIV23/Meraki-To-MindMaps.gitInstall Python packages using pip according to the requirements.txt filepip install -r requirements.txtIf needed, you can create optionally the next folders depending on current requirements and code tweaks youâ€™d like to make:mkdir outputs logsInstall markmap into your environment:sudo apt updatesudo apt install npmsudo npm install markmap-cli -gCreate .env file which will contain the API KEY from the organization(s) with the next format:API_KEY = &lt;API key or token from Dashboard&gt;Or you can easily get the public API key and play around API calls using the Cisco Meraki Get Hands-On section:https://developer.cisco.com/meraki/meraki-platform/Application walkthorugh: Run the main script which will automatically gather data from corresponding key (by default, Meraki API is being used): python meraki_api_main.py Multiple log messages will appear in the console notifying the current step including progress bar: Looping in as many organizations required to generate SVG files including each device current status: Outputs 1. Markmap file for global licensing: Output 2. SVG file per each OrgID:Future developments Gather SVG and markmap by choosing an OrgID. filename should include OrgID. Gather and sort Offline / online devices within an OrgID." } ]
